<?php

/**
 * Set default config values if missing.
 */
function lending_library_update_9001() {
  $config = \Drupal::configFactory()->getEditable('lending_library.settings');
  $defaults = [
    'loan_terms_html' => '<h4>Loan Terms</h4><ul><li><strong>Due Date:</strong> N/A – calculated on checkout.</li><li>All tools must be returned within seven (7) days. Late fees apply.</li><li>Handle tools responsibly; you are liable for damage or loss.</li></ul><p>See the enrollment form for full rules.</p>',
    'email_checkout_footer' => 'Please treat our tools with care. — MakeHaven Team',
    'email_return_body' => 'Thanks — your return has been recorded.',
    'email_issue_notice_intro' => 'A member submitted an issue report.',
  ];
  foreach ($defaults as $k => $v) {
    if ($config->get($k) === NULL) {
      $config->set($k, $v);
    }
  }
  $config->save();
}

/**
 * Add field_item_available_since field.
 */
function lending_library_update_10002() {
  $field_storage_manager = \Drupal::entityTypeManager()->getStorage('field_storage_config');
  $field_manager = \Drupal::entityTypeManager()->getStorage('field_config');

  if (!$field_storage_manager->load('node.field_item_available_since')) {
    $field_storage_definition = $field_storage_manager->create([
      'field_name' => 'field_item_available_since',
      'entity_type' => 'node',
      'type' => 'datetime',
      'settings' => ['datetime_type' => 'datetime'],
      'cardinality' => 1,
    ]);
    $field_storage_definition->save();
  }

  if (!$field_manager->load('node.library_item.field_item_available_since')) {
    $field_definition = $field_manager->create([
      'field_name' => 'field_item_available_since',
      'entity_type' => 'node',
      'bundle' => 'library_item',
      'label' => 'Available Since',
      'description' => 'The date the item became available.',
      'required' => FALSE,
      'translatable' => FALSE,
      'default_value' => [],
      'settings' => [],
    ]);
    $field_definition->save();
  }
}

/**
 * Add field_library_renew_count field.
 */
function lending_library_update_10003() {
  $field_storage_manager = \Drupal::entityTypeManager()->getStorage('field_storage_config');
  $field_manager = \Drupal::entityTypeManager()->getStorage('field_config');

  if (!$field_storage_manager->load('library_transaction.field_library_renew_count')) {
    $field_storage_definition = $field_storage_manager->create([
      'field_name' => 'field_library_renew_count',
      'entity_type' => 'library_transaction',
      'type' => 'integer',
      'settings' => [],
      'cardinality' => 1,
    ]);
    $field_storage_definition->save();
  }

  if (!$field_manager->load('library_transaction.library_transaction.field_library_renew_count')) {
    $field_definition = $field_manager->create([
      'field_name' => 'field_library_renew_count',
      'entity_type' => 'library_transaction',
      'bundle' => 'library_transaction',
      'label' => 'Renew Count',
      'description' => 'The number of times this loan has been renewed.',
      'required' => FALSE,
      'default_value' => [['value' => 0]],
      'settings' => [
        'min' => 0,
      ],
    ]);
    $field_definition->save();
  }
}
